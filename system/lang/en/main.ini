;
; main.ini
; Language: en
;
; Instructions to the translator:
;   1. DO NOT change anything BEFORE the equal "=" sign
;      Translate the words AFTER the equal "=" sign
;	Sample:
; 		leave_me_as_is		= "Translate me please!"
;   2. Enclose group of words in quotes, e.g. "group of words"
;   3. A single word do not need to be enclosed in quotes except for the words "True", "False", "Yes" and "No" which must be enclosed within quotes.
;   4. Keep case of letters whenever applicable
;

[COMMON]
home				= Home
client				= Client
create_client			= "Create Client"
find_client			= "Find Client"
follow_up			= "Follow-up"
automate			= Automate
comm_plan			= "Comm Plan"
library_autoproc		= "Library AutoProc"
create_autoproc			= "Create AutoProc"
library_message			= "Library Message"
create_message			= "Create Message"
criteria			= Criteria
upload_clientfile		= "Upload ClientFile"

;-----------------------------------
immediate			= Immediate

cell		= cell
contact_home	= home
voice		= Voice
email		= Email
snail_mail	= "Snail mail"

;-----------------------------------

msgvar_btn_animal		= animal
msgvar_btn_owner		= owner
msgvar_btn_honorary		= honorary

;-----------------------------------
pending				= Pending
;-----------------------------------

processing			= Processing
success				= "Success!"
failure				= Failure
empty				= empty
animal_name			= "Animal name"
external_id			= "External ID"
gender				= Gender
breed				= Breed
cancel_update			= "Cancel update"
name				= Name
specie				= Specie
species				= Species
race				= Race
genders				= Genders
phone_number			= "Phone Number"
priority			= Priority
remove_this_line		= "Remove this line"
honorary			= Honorary
first_name			= "First name"
last_name			= "Last name"
send_date			= "Send date"
proc				= Proc
urgency				= Urgency
category			= Category
channel				= Channel
status				= Status
message				= Message
description			= Description
word_yes			= "Yes"
word_no				= "No"
word_true			= "True"
word_false			= "False"
or				= or
all				= All
undo_changes			= "Undo changes"
back				= Back
proceed				= Proceed
back_previous_step		= "Back to the previous step"
proceed_next_step		= "Proceed to the next step"
reload_page			= "Reload the page without saving your recent modifications"
consolidate			= Consolidate
offset				= Offset
anticipation			= Anticipation
if_crit_a			= "If Criterion A"
unless_crit_b			= "UNLESS Criterion B"
reminders			= Reminders
punch_list			= "Punch List"
owner				= Owner
step				= Step
practice			= Practice
active				= Active
recurring_period		= "Recurring Period"
comparison_operator		= "Comparison operator"
unknown_error			= "Unknown error: Unexpected error occurred!"

[DATE_TIME]
day				= day
week				= week
month				= month
quarter				= quarter
semester			= semester
year				= year

; plural
days				= days
weeks				= weeks
months				= months
years				= years

[FORM_VALUES]
optional_text_value		= "(optional)"
dropdown_select			= "-- select --"
dropdown_empty			= "-- empty --"
dropdown_select_channel		= "-- select channel --"
dropdown_select_category	= "-- select category --"
dropdown_select_message		= "-- select message --"
dropdown_pick_refdate		= "-- select reference date --"
dropdown_target_evtdate		= "-- Target Event Date --"
dropdown_remind_duration_1	= "-- Reminder duration 1 --"
dropdown_remind_duration_2	= "-- Reminder duration 2 --"
dropdown_multi_refdate		= "-- select multi-reference date --"
dropdown_single_refdate		= "-- select single reference date --"
dropdown_refdate_1		= "-- select reference date 1 --"
dropdown_refdate_2		= "-- select reference date 2 --"

[COMMON_VERBS]
delete				= Delete
modify				= Modify
save				= Save
select				= Select
copy				= Copy
cancel				= Cancel

[COMMON_PHRASES]
correct_the_following		= "Correct the following:"
no_message_create_first		= "You do not have a message to use yet.  Please create a messages first."
is_proc_recurring		= "Is the procedure recurring?"

[MESSAGE_LEVELS]
life_death_issue		= "life or death issue"
billing_issue			= "billing issue"
significant_issue		= "significant health issue"
appointment_reminder		= "appointment reminder"
prevention			= prevention
education			= education

[QUESTIONS]
confirm_are_you_sure		= "Are you sure?"
confirm_delete_client		= "Are you sure you want to delete this client?"
confirm_delete_followup		= "Are you sure you want to delete this follow-up?"
confirm_delete_gender		= "Are you sure you want to delete this gender?"
confirm_delete_message		= "Are you sure you want to delete this message?"
confirm_delete_proc		= "Are you sure you want to delete this procedure?"
confirm_delete_breed		= "Are you sure you want to delete this breed?"
confirm_delete_specie		= "Are you sure you want to delete this specie?"
confirm_delete_animal		= "Are you sure you want to delete this animal?"
confirm_delete_criterion	= "Are you sure you want to delete this criterion?"

[PLEASE_WAIT_MESSAGES]
matching_similar_owner		= "Matching similar owner names, please wait"
matching_similar_animal		= "Matching similar animal names, please wait"
matching_similar_client		= "Matching similar client names, please wait"
wait_procname_availability	= "Checking if procedure name is available, please wait"
wait_reading_database		= "Reading the database, please wait"
wait_reading_client		= "Reading client information from server, please wait"
wait_reading_phone_numbers	= "Reading client phone numbers from server, please wait"
wait_reading_animal		= "Reading animal information from server, please wait"
wait_deleting_client		= "Deleting client, please wait"
wait_deleting_followup		= "Deleting follow-up, please wait"
wait_deleting_gender		= "Deleting gender, please wait"
wait_deleting_message		= "Deleting message, please wait"
wait_deleting_proc		= "Deleting procedure, please wait"
wait_deleting_specie		= "Deleting specie, please wait"
wait_deleting_animal		= "Deleting animal, please wait"
wait_deleting_criterion		= "Deleting criterion, please wait"

[LOGIN]
; controller
session_terminated		= "You have been terminated"
wrong_magic_word		= "You didn't say the magic word !!!"

; template
user				= User
password			= Password
connect				= Connect

; javascript
enter_user			= "Please enter user."
enter_user_password		= "Please enter user and password."
enter_password			= "Please enter password."

[SEARCH]
; template
owners_name			= "Owner's name"
or_animals_name			= "or animal's name"
owner				= Owner
town				= Town

[ANIMALS]
; controller
animal_saved			= "Animal was successfully saved."
animal_updated			= "Animal was successfully updated."

; template helper
deceased			= deceased

; template
click_new_animal		= "Click here to create a new animal"
birth_date			= "Birth date"
death_date			= "Death date"
identified			= Identified
vaccinated			= Vaccinated
insured				= Insured
add_animal			= "Add animal"
update_animal			= "Update animal"

; javascript
hide_new_animal_form		= "Hide new animal entry form"
pls_enter_valid_deathdate	= "Please enter a valid death date."
pls_enter_valid_birthdate	= "Please enter a valid birth date."
pls_select_specie		= "Please select specie."
pls_select_animal_gender	= "Please select animal gender."
pls_enter_animal_name		= "Please enter the name of the animal."
animal_deletion_ok		= "Animal deletion complete."
animal_deletion_error		= "Error occured while processing animal deletion."

[CLIENTS]
; controller
client_saved			= "Client was successfully saved."
client_updated			= "Client was successfully updated."

; template helper
continue_sending_msg		= "Continue sending messages"
stop_sending_msg		= "Stop sending messages"
lower_value_higher_priority	= "Lower value means higher priority."
help_phone_priority		= "This <b>Priority</b> is used only when more than one instance of a phone type is supplied."

; template
click_new_client		= "Click here to create a new client"
control_flow			= "Control Flow"
sending_status			= "Sending Status"
message_threshold		= "Message Threshold"
contact				= Contact
web				= Web
primary_email			= "Primary Email"
secondary_email			= "Secondary Email"
phone				= Phone
add_a_phone			= "Add a phone"

address				= Address
home_address			= "Home Address"
address_line_1			= "Address Line 1"
address_line_2			= "Address Line 2"
city				= City
postal_code			= "Postal Code"
province_or_state		= "Province or State"
clear_home_address		= "Clear home address only"
office_address			= "Office Address"
clear_office_address		= "Clear office address only"
country				= Country

channel_settings		= "Channel Settings"
preferred_channel		= "Preferred Channel"
use_preferred_exclusively	= "Use Preferred Channel Exclusively"
backup_channel			= "Backup Channel"
nixed_channels			= "Nixed Channels"

add_client			= "Add client"
update_client			= "Update client"

first_letters_client		= "First letters of the client's name"

; javascript
hide_client_form		= "Hide new client entry form"
goto_animal_manager		= "Go to animal manager"
invalid_client_home_address	= "Please complete or clear client's home address."
invalid_client_office_address	= "Please complete or clear client's office address."
invalid_client_country		= "Please enter client's country."
invalid_first_name		= "Please enter first name."
invalid_last_name		= "Please enter last name."
invalid_honorary		= "Please select honorary."
invalid_phone			= "Please complete or delete phone number"

client_delete_ok		= "Client deletion complete."
client_delete_error		= "Error occured while processing client deletion."

[COMM_PLAN]
; template
communication_plan		= "Communication Plan"
message_sending_threshold	= "Message Sending Threshold"
per_client_quota		= "Per Client Quota"
limit_priority_under		= "Limit Priority Under"
quota_duration			= "quota duration"
quantity			= quantity

; javascript
invalid_quantity_client_quota	= "Please enter quantity on per client quota."

[CRITERIA]
; controller
criterion_saved			= "Criterion was successfully saved."
criterion_updated		= "Criterion was successfully updated."

; template
click_new_criteria		= "Click here to create a new criterion"
criteria_ini_code		= "Criteria INI Code"
add_criterion			= "Add criterion"
update_criterion		= "Update criterion"
type				= Type
ini_code			= "INI code"
criteria_caption		= "Criteria caption"

; javascript
hide_new_criterion_form		= "Hide new criterion entry form"
pls_enter_caption		= "Please enter caption."
criterion_deletion_ok		= "Criterion deletion complete."
criterion_deletion_error	= "Error occured while processing criterion deletion."

[FOLLOW_UP]
; controller
duplicate_error			= "Duplicate error: This one already exists."
followup_saved			= "Follow-up was successfully saved."
followup_updated		= "Follow-up was successfully updated."
animal_not_found		= "That animal cannot be found on database."

; template helper
done				= Done
next_in_line			= "Next in line"
reminder			= reminder

; template
click_new_followup		= "Click here to add a follow-up"
msg_is_for			= "This message is for"
which_belongs_to		= "which belongs to"
msg_will_be_sent_in		= "This message will be sent in"
msg_will_be_sent_by		= "This message will be sent by"
to				= to
send_this_msg			= "Send this message"
add_followup			= "Add follow-up"
update_followup			= "Update follow-up"

; javascript
hide_followup_form		= "Hide new followup entry form"
invalid_message			= "Please select a message."
followup_deleted		= "Follow-up deletion complete."
followup_deletion_error		= "Error occured while processing follow-up deletion."

[GENDERS]
; controller
gender_saved			= "Gender was successfully saved."
gender_updated			= "Gender was successfully updated."

; template
click_new_gender		= "Click here to create a new gender"
add_gender			= "Add gender"
update_gender			= "Update gender"

; javascript
hide_gender_form		= "Hide new gender entry form"
invalid_gender			= "Please enter gender."
gender_deletion_ok		= "Gender deletion complete."
gender_deletion_error		= "Error occured while processing gender deletion."

[MESSAGES]
; controller
message_saved			= "Your message was successfully saved."
message_updated			= "Your message was successfully updated."

; template helper
new_category			= "New category"

; template
click_new_message		= "Click here to create a new message"
active_for_practice		= "Active for practice"
add_message			= "Add message"
update_message			= "Update message"

; javascript
click_new_message		= "Click here to create a new message"
hide_message_form		= "Hide new message entry form"
invalid_message			= "Please enter message."
invalid_description		= "Please enter description."
invalid_category		= "Please enter new category."
message_deletion_ok		= "Message deletion complete."
message_deletion_error		= "Error occured while processing message deletion."

[PROC_COMPLETE]
; template helper
all_species			= "All Species"
all_genders			= "All Genders"
goto_start			= "Go to start"
one_step			= "One-step"
two_step			= "Two-step"
group				= Group
not_set				= "Not set"
procedure_recurs_every		= "procedure recurs every"
congrats_proc_complete		= "Congratulations, you completed the setup for Procedure"
this_you_put_in_place		= "This is what you put in place"
uc_send				= SEND
uc_if				= IF
practice_procedure		= "Practice Procedure"
active_procedure		= "Active Procedure"
on_senddate			= "ON SendDate"

[PROC_GROUP]
; template
you_successfully_chose_proctype	= "<p>You successfully chose the procedure type! Now you will define the Send Date, decide if your Procedure is recurring and, if so, define the Recurring Period after which the procedure occurs again.</p><p>The Send Date is calculated as an absolute date.</p><p>Send Date = Absolute date</p><p>You can decide to make the Procedure recur again, forever, after a recurring Period</p>"
important_senddate_validity	= "<p>Important Note : Send Date validity<br />If the Send Date cannot be Programmed (i.e. some fields needed to calculate it don't exist, or the resulting date is in the past), ContactMaster declares the Procedure not Valid for the given Client.</p><p>Important Note: Implementing Recurrence<br />To implement recurrence, ContactMaster calculates the first Recurring Send Date that is in the future and uses it as the Send Date for this instance.</p>"
invalid_date			= "Please enter a valid date."

[PROC_IF_CRIT_A]
; template helper
true_slash_false		= "True/False"
quantitative			= Quantitative

; template
you_completed_msg_selection	= "<p>You have completed the message selection! You will now program the If Criterion A. The If Criterion A is used to determine whether any given Client should be sent this procedure's message.</p><p>To simplify how we write this procedure, we will not use date information in this criterion. If we need to use date information to determine if we want to send this message, we will put it in the UNLESS criterion B phase.</p><p>So, if this criterion A is true, we will send the message automatically, unless the criterion B is true.</p><p>First we will select the specie (or species) and gender (or genders) to which this message applies.<br />Then we will select as many true/false criteria or quantitative criteria.<br />The criterion will be true if ALL of its parts are true. If one of them fails, the criterion will be false, and the message will not be sent.</p>"
specie_s			= "Specie(s)"
gender_s			= "Gender(s)"
add_a_criterion			= "Add a criterion"
select_proc_type		= "Select procedure type"

; javascript
invalid_specie			= "Please select an specie."
invalid_gender			= "Please select a gender."
invalid_criteria_number		= "Please complete or delete criteria number"

[PROC_MESSAGE]
; template
proc_creation_intro		= "<p>Creating an Automated or Group Procedure is a simple process with 5 steps.
			<br />A Procedure allows you to instruct ContactMaster to automatically do the following actions for you:</p>
			<p>SEND <i>this message</i> 
			<br />IF <i>this criterion A is true</i> 
			<br />ON <i>this date</i>
			<br />UNLESS <i>this criterion B is true</i></p>
			<p>ContactMaster will help you and guide you through this process.</p>
			<hr />
			<p>Our first step will be to decide what select the message to send, and make some choices related to that message.
			<br />The message needs to already be stored in the Library.</p>"
procedure_name			= "Procedure name"
followup_urgency		= "Follow-up Urgency"
commplan_squelch_note		= "Please note: Depending upon the Practice's  Comm Plan, some messages may get squelched based on their urgency rating."
send_if_animal_dead		= "Send if Animal is dead"

; javascript
proc_name_available		= "Ok, this procedure name is available."
proc_name_not_changed		= "Ok, procedure name is not changed."
proc_name_you_already_use	= "You already have a procedure with that name."
proc_name_exists_already	= "This one exists already."

invalid_proc_name		= "Please enter procedure name."
try_another_proc_name		= "Please try another procedure name."

[PROC_ONE_STEP]
; template
one_step_instructions		= "<p>You successfully chose the procedure type! Now you will calculate the Send Date.</p>
			<p>The Send Date is calculated from a reference date on the Client File:</p>
			<p>Send Date = Reference Date + Offset - Anticipation</p>
			<p>For instance, in the case of a vaccine, you may choose:
			<br />Send Date = Last Booster Date + Offset of 1 year - Anticipation of 1 month</p>
			<p>The Offset is the amount of time between the reference date and the event you are requesting, such as, for instance, a booster shot, of blood test, or an X-ray.</p>
			<p>The Anticipation represents how far ahead you want to message your Client before the event you are requesting.</p>"
one_step_note			= "<p>Important Note : 
			<br />To implement a One-Step Procedure, ContactMaster first evaluates the Send Date for the Multi-Reference date. If this date can be calculated (i.e. all the fields exist to calculate it) and the message can be programmed (i.e. it is in the future), then it becomes the Send Date. If this date cannot be calculated or the message cannot be Programmed,  ContactMaster declares the Procedure not Valid for the given Client.</p>"

; javascript
pls_select_refdate		= "Please select reference date."

[PROC_PUNCH]
; template helper
punch_instructions		= "<p>You successfully selected your reminder options! Now you need to complete your procedure by selecting a few simple options.</p>
			<p>All Procedures are in the Library. There are many of them in there! To make them appear in the select club of those actually possibly used by the Practice, you can mark them as Practice Procedures. It will not Activate them, but will allow you to find or reference them faster.</p>
			<p>In order for an Automated or Group Procedure to be operational and executed by CM, it needs to be Activated, in which case it becomes Active. Be careful! Once a Procedure is Active, it will immediately start Programming Messages to all the Clients for which it is Valid. Only Active a Procedure if you are SURE that you want to do it.</p>"
mark_practice_proc		= "Mark this Procedure as a Practice Procedure"
activate_proc			= "Activate this Procedure"
finish_proc_process		= "Finish procedure process"

[PROC_GRID]
; controller
mine				= Mine
cm_proc_copy_ok			= "CM Procedure was successfully copied."
cm_proc_copy_err_duplicate	= "Copying the procedure results to a duplicate.  Try a different procedure name."
cm_proc_copy_err_category	= "Error occurred while copying the message category of the Procedure."
cm_proc_copy_err_message	= "Error occurred while copying the message of the Procedure."
cm_proc_copy_err_proc		= "Error occurred while copying the Procedure."

; template helper
proc_is_not_complete		= "This procedure is not completed."
copy_cmi_proc			= "Copy CMI procedure"

; template
create_new_proc			= "Create a new procedure"
proc_copy			= "Procedure copy"
save_it_as			= "Save it as"
proc_delete_ok			= "Procedure deletion complete."
proc_delete_error		= "Error occured while processing procedure deletion."
pls_enter_procname		= "Please enter a procedure name."

[PROC_REMIND]
; javascript
pls_select_evtdate		= "Please select event date."
pls_select_rem_duration_1	= "Please select reminder duration 1."
pls_select_rem_duration_2	= "Please select reminder duration 2."

schedule_no_of_reminder         = "Schedule number of reminder"
select_msg_for_reminder         = "Select message for reminder"

remind_instructions		= "<p>You successfully picked criterion B! Now you need to decide if you want to send reminders in case the Client forgets to schedule the act requested (if any)</p>
                        <p>Sometimes a Client does not do what the Procedure reminds him to do. In some cases, you might decide that you want to remind him again. For that, you need to identify a specific target event whose date needs to happen within a certain number of weeks of the procedure reference date + Offset. If it does not happen, then the Procedure will send a reschedule reminder:</p>
                        <p>IF (TargetEventDate - ReferenceDate- Offset) &lt;= Reminder_Duration DO NOT SEND REMINDER</p>"
                        
[PROC_SELECT_TYPE]
; template
proc_seltype_instructions	= "<p>You successfully picked Criterion A! Now we need to calculate the Send Date.</p>
			<p>But, before we can do that, we have to decide exactly which kind of procedure we need.</p>
			<p>First, there is a simple kind of procedure. Maybe it occurs only once, and follows a specific event date that occurs only once. For instance, we might want to send a message for an old dog checkup visit on or about the dog's 10th birthday. Or it is triggered by a regular recurring event, and follows it by a constant offset. For instance, every time an animal visits the practice, we can schedule a message requesting the next checkup 6 months later. 
			<br />These are One-Step Procedures.</p>
			<p>Then, there are procedures which are based off of a certain event the first time, then off of a different event all the other times. These are very common. For instance, vaccines, or pathology follow-ups are almost all like that. For a vaccine, you want to program a booster one year after the primo injection the first time, then 1 year after the next booster forever after. For a pathology, such as, for instance renal insufficiency, you want to schedule a urine analysis 3 months after the diagnosis was established, then 3 months after the last urine analysis event forever after.  
			<br />These are Two-Step Procedures.</p>
			<p>Then there are procedures that are triggered by a certain event, and then repeat forever afterwards within rebasing themselves off of a follow-up event. For instance, sending good wishes on an animal's birthday is triggered off of the animal's birth date and always repeats until the end of its life, without having to be rebased. 
			<br />These are Recurring Procedures.</p>
			<p>Important note: Recurring vs Two-Step.
			Many procedures appear to be Recurring, but really are Two-Step. The critical difference is whether or not you want the future occurrences of the message to re-base themselves off of a specific event, such as the act for which a visit is being requested: a blood test,a urine analysis, an X-ray. In the case of a vaccine for example, the first instinct is to consider that a Recurring Procedure which repeats once a year after the the primo injection. In fact, we really want the boosters after the first one to follow the previous booster by a year - otherwise we might send a message to someone who already  had his booster, or progressively get out of phase with the reality of the series of vaccines.</p>"
select_proc_type		= "Select the type of procedure"

; javascript
pls_select_proctype		= "Please select procedure type."

[PROC_TWO_STEP]
; template
two_step_instructions		= "<p>You successfully chose the procedure type! Now you will calculate the Send Date.</p>
			<p>The Send Date is calculated from a reference date on the Client File:</p>
			<p>Send Date = Reference Date + Offset - Anticipation</p>
			<p>For instance, in the case of a vaccine, you may choose:
			<br />Send Date = Last Booster Date + Offset of 1 year - Anticipation of 1 month</p>
			<p>The Offset is the amount of time between the reference date and the event you are requesting, such as, for instance, a booster shot, of blood test, or an X-ray.</p>
			<p>The Anticipation represents how far ahead you want to message your Client before the event you are requesting.</p>
			<p>First you need to select your Reference Date. In a Two-Step Procedure, you have two reference dates: the one used at first (the Single Reference Date), then the one used on a regular basis (the Multi-Reference Date). In the formula, you will use the Multi-reference Date.</p>"
single_refdate			= "Single Reference Date"
two_step_note			= "<p>Important Note : 
			<br />To implement a Two-Step Procedure, ContactMaster first evaluates the Send Date for the Multi-Reference date. If this date can be calculated (i.e. all the fields exist to calculate it) and the message can be programmed (i.e. it is in the future), then it becomes the Send Date. If this date cannot be calculated or the message cannot be Programmed, then ContactMaster evaluates the Send Date for the Single Reference Date. If the Send Date can be calculated and the message Programmed, ContactMaster does so. Otherwise, it declares the Procedure not Valid for the given Client.</p>"
pls_select_multi_refdate	= "Please select multi-reference date."
pls_select_single_refdate	= "Please select single reference date."

[PROC_UNLESS]
; template
proc_unless_instructions	= "<p>You successfully calculated the Send Date! Now you need to pick the UNLESS Criterion B.</p>
			<p>This Procedure will send its Message IF Criterion A is true, UNLESS Criterion B is true.</p>
			<p>By default, Criterion B is false, and you can leave it that way.
			<br />Or - you can define for Criterion B a series of date comparisons, each of which, if true, will make Criterion B true, and will stop the Procedure from sending a Message. For Instance:</p>
			<p>UNLESS [(Send Date - Birthdate) &lt; 10 years] will stop the Procedure until the age of the animal is 10 years.
			<br />UNLESS [(Send Date - Birthdate) &lt; 10 years] OR [(Send Date - Last Visit Date) &lt; 3 months)] will not allow a message if the animal is under 10 years old, or if the animal had a visit in the last 3 months.</p>
			<p>Each criterion will be in the form:</p>
			<p>ReferenceDate1 - ReferenceDate2 &lt;/&lt;=/=/&gt;=/&gt;  duration
			<br />where the reference dates are any date in the Client File</p>
			<p>You can add as many criteria as you want in Criterion B.</p>"

[SPECIES]
; controller
specie_saved_ok			= "Specie was successfully saved."
specie_saved_updated		= "Specie was successfully updated."
specie_duplicate_error		= "Duplicate error: Specie already exists"

; template helper
no_breed			= "-- no breed --"

; template
click_new_specie		= "Click here to create a new specie"
add_a_breed			= "Add a breed"
add_specie			= "Add specie"
update_specie			= "Update specie"
breeds				= Breeds

; javascript
change_to			= "change to"
hide_new_specie_form		= "Hide new specie entry form"
pls_enter_specie		= "Please enter specie."
specie_deletion_ok		= "Specie deletion complete."
specie_deletion_error		= "Error occured while processing specie deletion."

[TESTUPLOADINI]
; controller
upload_file_error		= "There was an error uploading the file, please try again!"
db_ini_update_ok		= "The database was successfully updated by INI file"
db_ini_update_error		= "INI Uploaded.  Error occurred while saving to database.  Please check INI file for errors."

; template
ini_file_upload			= "INI File Upload"
choose_ini_file			= "Choose INI file"
upload_client_file		= "Upload Client File"
upload_results			= "Upload Results"

; javascript
pls_choose_ini_to_upload	= "Please choose an INI file to upload."

[NEWLY_ADDED_ONES]
dropdown_select_date			= "-- select date--"
dropdown_select_time			= "-- select time--"




; end of file

