#    [General Encoding Considerations]
#
#
#    first line defines the file encoding : may be UTF8 or 8859-15 (preferably UTF8)
#    comments are introduced by SQUARE "#" (except inside a character string enclosed by double quotes ")
#        they are ignored by the parser from the # character to the end of line
#    blank lines are skipped
#    lines are terminated by any combination in : CR / LF / CR+LF / LF+CR
#    semicolon ";" separates values to the right of an equal sign
#
#
#    spaces are skipped unless inside a STRING variable to the right of an equal sign, which means that
#        leading and trailing spaces for a STRING variable are skipped unless inside double quotes
#    double quotes are required around a STRING variable containing a semi-colon, parentheses or 
#        leading/ trailing spaces or escaped characters; 
#        otherwise they are optional around any value to the right of an equal sign
#    parentheses are skipped unless STRING variables delimited by double quotes
#    
#
#    ESCAPE character is ANTISLASH: "\" that can escape itself as \\
#    ESCAPE character is used to include double quotes, control or non-representable characters
#        inside a STRING variable
#    the use of ESCAPE character in a STRING variable requires the use of double quotes
#    to represent a character of hexadecimal value AA, write ESCAPE character plus AA
#        example: specialstring.CM = "line1\0Aline2" will be read:
#                 line1
#                 line2
# 
#
#    parentheses in examples or statements in this file mean that what is inside is optional
#       example:  breed.CM = (STRING;) tarantula 
#  
#
#
#    [accepted Characters]
#
#
#    section and key names can only contain characters a-z, 0-9 and _ and no spaces, and are case insensitive
#    however
#        key names imposed by CM may also contain a period "."
#        section names where all key names are imposed by CM may also contain a period "."
#    section names are surrounded by brackets "[]"
#    the equal "=" sign is used in a key = value statement
#    the semi-colon ";" is used to the right of the equal sign, to separate values
#    the double quote " is used around some STRING values, and optionally around all values
#    the parenthesis is used optionally to indicate optional syntax
#    one of CR/LF/CR+LF/LF+CR must be used for "new line"
#    EOF character is used at the end of the file
#    SPACES may be used anywhere 
#    POUND # character indicates the start of a comment
#    there are no other characters that may be used in this ini file, except within a STRING variable
#
#    please note: you must not generate a key name or section name including a period"."
#    
#
#
#    [File Sections]
#
#
#    the file is separated in logical sections, led by a section name/header
#        and followed by a series of key = value statements
#    each section is defined by a unique section name, i.e. header surrounded by 2 brackets
#    section names can only contain characters a-z, 0-9 and _ and no spaces and are case insensitive
#        example: [sectionName]
#
#
#
#    [key Equals Value Statements]
#
#
#    each section line looks like : name = type; label; value ; value ; value...
#    where
#        name is the key name that must be unique in the section
#        type is the type of value
#        label, a STRING, is the legend for that value when it is presented to the user
#        value is the value for the key
#        several values can be grouped in the same line (in case of LISTs) separated by ";"
#    occurrence of a duplicate key in a section quashes the previous occurrence
#        unless it has a date, in which case the last occurrence is retained
#
#
#
#    [source Of Section Names And Key Names]
#
#
#    all section names are imposed by CM
#    CM also imposes a certain number of key names
#        which represent specific information that it requires by a specific name
#
#    all other information provided by the Practice Management Software uses key names that PMS chooses.
#    CM will accept and load any such keys and values provided by the PMS
#        if they are provided in the appropriate sections
#
#
#
#    [key Names Imposed By CM]
#
#
#     If a key name is imposed by CM and not the PMS
#         the key name will end in ".CM"
#         the type and label are optional
#         example:                 followupPeriod.CM = DURATION; "Followup Period"; 00020100
#             may also be written: followupPeriod.CM = 00020100
#                                
#
#     [section Names Where All Key Names Imposed By CM]
#
#
#      if, in a section, all key names are imposed by CM, and not the PMS
#          the section name will end in ".CM"
#          the PMS must NOT include any of its own keys
#          optionally the key names in that section may not have .CM at the end
#              since we already know that they are CM generated
#              however, they still behave as if they ended in .CM
#          example:        after [sectionName.CM]
#                  you may write thisKey.CM = BOOLEAN; "This Key"; FALSE
#                             or thisKey = BOOLEAM; "This Key"; FALSE
#                             or thisKey = FALSE
#
#    [types]
#
#
#    Basic TYPEs include:
#        BOOLEAN, INTEGER, DECIMAL, WEIGHT, LENGTH, CURRENCY, PHONENUMBER, STRING, EVENT, DATETIME, DURATION
#        example: isTalking = BOOLEAN; "can the animal talk?"; FALSE
#    Simple Types include all basic types, plus CHANGE and N_ARY
#
#
#    BOOLEAN values are TRUE or FALSE
#    WEIGHT, LENGTH, CURRENCY are always DECIMAL
#    PHONENUMBER is a STRING in phoneNumberFormat (as defined below in the [PMS.CM] section)
#    STRINGS must be enclosed in double quotes "" if they contain 
#        useful leading/ trailing spaces, semicolons ";", parentheses, and/or ESCAPE characters
#    EVENT is a date in dateFormat (as defined in the [PMS.CM] section)
#    DATETIME is a concatenation of dateFormat then timeFormat with no internal spaces
#        example: dateFormat.CM = DDMMYYYY;
#                 timeFormat.CM = 1200;
#                 appointment = DATETIME, "Appointment", 220520071445 # i.e. 22/052007 at 1445
#    DURATION is a STRING, of digits 0-9 only, of format YYMMWWDD, where
#         YY indicates two digits for years, MM indicates 2 digits for months
#         WW indicate 2 digits for weeks, and DD indicates 2 digits for days
#    and duration = YY years + MM months + WW weeks + DD days
#        example:  followupPeriod = DURATION; "follow up period"; 00020100
#
#
#    CHANGE is a BOOLEAN followed by an EVENT, and tracks the state of a BOOLEAN and its change date.
#        example:  heartDisease = EVENT; "Heart Disease"; TRUE; 01012008
#    N_ARY, always followed by a basic type, defines a variable of that type which may take one of a list of n values.
#        example: aOrB = N_ARY STRING; "A or B"; A
#
#
#
#    [complex Types]
#
#
#    If you need to, you may create complex types using LIST and COMPOSITE
#    CM uses LIST but does not use COMPOSITE
#
#
#    LIST, always followed by a simple type, is a list of values of the same type, with no number of values defined
#        example: nextAppointments.CM = LIST DATETIME; "Next Appointments"; value; value; value; value
#    COMPOSITE, always followed by a specific list of simple types, is a list of specific number of different values
#        whose types are exactly specified by the COMPOSITE statement
#        and whose number is equal to the number of types listed in the COMPOSITE Statement
#        example: breedCertificate = COMPOSITE STRING INTEGER EVENT; "Breed Certificate"; "A01783453"; 167; 01012007
#
#
#
#    [semi Auto Follow Ups]
#
#
#    Any key of simple type, of type DATETIME, EVENT or CHANGE, may generate a semi-automatic follow-up 
#         by following its last value with FOLLOWUP statement,and a DURATION, all properly separated
#         followed optionally by a MESSAGE statement and a STRING value for the message, properly separated
#         example: urineAnalysis = EVENT; "Urine Analysis"; 19102008; FOLLOWUP; 00030000
#                  urineAnalysis = EVENT; "Urine Analysis"; 19102008; FOLLOWUP; 00030000; MESSAGE; "pls contact your vet"
#
#
#
#    [IMPORTANT NOTES]
#
#
#    PLEASE STRIP USELESS LEADING AND TRAILING SPACES before sending a STRING
#        otherwise your subscriber will not be able to use it properly
#        we are only stripping leading and trailing spaces if you do not surround a string by double quotes
#
#
#     THE KEY NAMES YOU SPECIFY IN THIS FILE ARE PERMANENT
#          they become a permanent db key entry, whose attached value (to the right of = sign) may change
#          but whose meaning must remain constant in the successive PMS software evolutions and releases
#
#
#
#    [VET PRACTICE ACTS AND DIAGNOSTICS]
#
#    for the sake of ease of use, Vets may use ACT in lieu of EVENT, and DIAG in lieu of CHANGE
#        example: urineAnalysis = ACT; "urine analysis act"; 23112008
#        example: cardiacDiag = DIAG; "cardiac diagnostic"; TRUE; 23112008
#
#
#
#    =====  Start of file description  =====

UTF8UTF8                                        # encoding type repeated twice

[PMS.CM]                                        # Section = Practice management Software (PMS) 
                                                # This section and all of its keys are imposed
                                                # every line/key is needed

pmsName = "VetPhi"                              # STRING need -  Name of PMS
pmsVersion = "X.XX.X"                           # STRING need -  Version of PMS
specialty = VET                                 # N_ARY STRING need - Specialty may be VET
language = FRENCH                               # N_ARY STRING need - language may be FRENCH, ENGLISH
encoding = ANSI                                 # N_ARY STRING need - may be UTF8, ANSI, 8859-15
country = FRANCE                                # N_ARY STRING need - may be FRANCE
timeZone = GMT+1                                # STRING need - time zone may be GMT+DECIMAL or GMT-DECIMAL
useDST = TRUE                                   # BOOLEAN need - use Daylight savings Time?
decimalFormat = "."                             # N_ARY STRING need - may be "," or "."
phoneNumberFormat = 0ddddddddd                  # N_ARY STRING need -  may be 0ddddddddd
                                                # phone numbers start with a 0, followed by 9 digits
dateFormat = DDMMYYYY                           # N_ARY STRING need - may be DDMMYYYY or MMDDYYYY
timeFormat = 1200                               # N_ARY STRING need - may be 1200 or 1200PM
                                                
weightUnits = KG                                # N_ARY STRING need - may be KG or LB; WEIGHT always DECIMAL
lengthUnits = M                                 # N_ARY STRING need - may be M or FT; LENGTH always DECIMAL
currencyUnits = EUR                             # N_ARY STRING need - may be EUR, USD, GBP; CURRENCY always DECIMAL

[SUBSCRIBER.CM]                                 # Section = Subscriber 
                                                # This section and all of its keys are compulsory


subscriberPmsId = "123A45"                      # STRING need - PMD ID of subscriber
subscriberLastName = "Paul"                     # STRING need - subscriber last name
subscriberFirstName = "Jack"                    # STRING need - subscriber first name
subscriberTitle = "Dr"                          # STRING need - subscriber title

[CLIENT.CM]                                     # Section = Client
                                                # This section and all of its keys are imposed
                                                # every line is needed


clientPmsId = "C123-3"                          # STRING need - Client ID within PMS. 
clientTitle = "Miss"                            # STRING need - Client title, such as Mr., Sir etc. 
clientLastName = "Doe"                          # STRING need
clientFirstName = "Jane"                        # STRING need 
addressLine1 = "1 street"                       # STRING need 
addressLine2 =                                  # STRING need if exists
addressLine3 =                                  # STRING need if exists
zipCode = 92270                                 # STRING need
city = "Bois Colombes"                          # STRING need
stateOrProvince =                               # STRING optional where not needed for snail mail
country = FRANCE                                # N_ARY STRING need - may be FRANCE, BELGIUM
noFollowUp = FALSE                              # BOOLEAN need - indicates if the client will get follow ups
smsCapablePhone = 0612345678 ; 0623456789 ; 0623456789
                                                # LIST PHONENUMBER need numeric digits alone with no space between
                                                # digits, multiple instances separated by ;
voiceCapablePhone = 0612345678 ; 0623456789 ; 0623456789 ; 0123456789 ; 0234567890
                                                # LIST PHONENUMBER need -  repeat number here as well if cellphone
                                                # multiple instances separated by ;
faxCapablePhone = 034567891                     # LIST PHONENUMBER need -  multiple instances separated by ;
emailAddress = mail1@isp1.com ; mail2@isp2.fr
                                                # LIST STRING need -  address requires exactly one @
                                                # multiple instances separated by ;
preferredChannelType = SMS                      # N_ARY STRING of SMS, VOICE, EMAIL, POST, FAX - need
preferredChannelNumber = 2                      # INTEGER need - order on line of listing for channel type, 1 is first
                                                # here, for SMS numbers, #2 = 06-23-45-67-89
                                                # if address, number can only be 1 (since only 1 address)


[CLIENTCRITERIA]                               # Section = client criteria
                                                # a few key names are imposed
                                                # but all information is optional
                                               

avgPurchase.CM = (CURRENCY; "average purchase";) 55.45
visitsPeryear.CM = (INTEGER; "visits per year";) 2.5
active.CM = (BOOLEAN; "active";) TRUE

#    ...  here add all client criteria which may be of use in programming follow-up rules
#
#    we strong recommend providing above average purchase per visit, visits per year, active in last 12 months
#    and, below, possibly also special discount
#    example: specialDiscount = BOOLEAN; "special Discount customer"; TRUE
#
#
#
#    IMPORTANT NOTE: SLIP ALL FOLLOWING SECTIONS EXCEPT [ENDOFFILE] 
#    IF THIS CAPTURES AN UPDATE TO THE CLIENT DATA ONLY
#    WITHOT UPDATE TO THE ANIMAL FILE


[ANIMAL.CM]                                     # Section = Animal
                                                # do not include this section name for client file update ONLY
                                                # This section and all of its keys are needed

animalPmsId = "A123-2"                          # STRING. Animal ID on PMS - need
animalName = "Medor"                            # STRING. Animal name - need 
animalId = 457890XCD34                          # STRING.  need - if identified, Animal chip (preferred) or tattoo
animalVetName = "Dr Dre"                        # N_ARY STRING need 0 





[ANIMALCRITERIA]                               # Section = animal criteria
                                                # do not include this section name if client file update ONLY
                                                # all .CM keys are needed


specie.CM = DOG                                 # N_ARY STRING eed -  may be only one of, or another if desired:
                                                # DOG, CAT, RABBIT, FERRET, RODENT, REPTILE, BIRD,
                                                # EQUINE, BOVINE, OVINE, PORCINE, OTHER 
                                                # Note: rather than using our categories
                                                #       it is possible to use your categories
gender.CM = FEMALE                              # N_ARY STRING need - may be only one of, or another if desired:
                                                # MALE, FEMALE, MALEOPERATED, FEMALEOPERATED, OTHER 
                                                #
birthDate.CM = 02102006                         # EVENT need
dead.CM = FALSE                                 # BOOLEAN need
deathDate.CM =                                  # EVENT need
lastVisitDate.CM = 19102008                     # EVENT need
nextAppointments.CM = 151120080930 ; 100720091400 
                                                # LIST DATETIME need: as many as there are next visits
identified.CM = FALSE                           # BOOLEAN need if exists
vaccinated.CM = TRUE                            # BOOLEAN need if exists
insured.CM = FALSE                              # BOOLEAN need
weight.CM = 18.0                                # WEIGHT need if exists


# ... here add all animal criteria which may be of use in programming follow-up rules
#
#    example: color = N_ARY STRING; "animal color"; "tortoise shell"
#    example: feedPurchasedAtClinic = BOOLEAN; "feed purchased at clinic"; TRUE


[ANIMALACTSANDDIAGNOSTICS]                   # Section = Animal Acts and Diagnostics
                                                # do not include this section name if client file update ONLY
                                                # needed: all Acts in last 18 months
                                                # needed: all diagnostics in life of animal


#... here enter all animal acts in the last 18 months - need
#... here enter all diagnostics in the life of the animal - need
#
#    example: urineAnalysis = ACT; "Urine Analysis";19102008
#    example: bloodTest30 = ACT; "Blood Test 30 days Followup"; 19102008; FOLLOWUP; 00000030
#
#    example: renalInsufficiency = DIAG; "Renal Insufficiency Diag"; TRUE; 19102008


bloodTestDate = EVENT;"blood test"; "04092008"
bloodTestDate = EVENT;"blood test"; "04092007"
xRayDate = EVENT; "X-ray"; "19102008"; FOLLOWUP; "00000030"; MESSAGE; "Better come back soon"
xRayDate = EVENT; "X-ray"; "04122007"
medicalImageryDate = EVENT; "medical imagery"; ""
shotDate = EVENT; "shot"; ""
internalAntiparasiticTreatmentDate = EVENT; "internal antiparasitic treatment"; ""
externalAntiparasiticTreatmentDate = EVENT; "external antiparasitic treatment"; "10042007"
surgeryDate = EVENT; "surgery"; ""
chemotherapyDate = EVENT; "chemotherapy"; ""

overweight = CHANGE; "overweight"; "FALSE";"04072005"
overweight = CHANGE; "overweight"; "FALSE";"04072006"
arthritis = CHANGE; "arthritis"; "FALSE";""
renalInsufficiency = CHANGE; "renal insufficiency"; "FALSE";""
hepaticInsufficiency = CHANGE; "hepatic insufficiency"; "FALSE";"19102008"
cardiacInsufficiency = CHANGE; "cardiac insufficiency"; "FALSE";""
diabetes = CHANGE; "diabetes"; "FALSE";""
pregnant = CHANGE; "pregnant"; "FALSE";""

chlrpVaccinePrimoDate = EVENT; "CHLRP Primo"; "04092004"
chlrpVaccineBoosterDate  = EVENT; "CHLRP Booster"; "11112007"
rabidVaccinePrimoDate  = EVENT; "rage primo"; "04092004"
rabidVaccineBoosterDate  = EVENT; "rage booster"; "11112007"
leucosisVaccinePrimoDate  = EVENT; "leucosis primo"; ""
leucosisVaccineBoosterDate  = EVENT; "leucosis booster"; ""
felvVaccineBoosterDate  = EVENT; "FELV booster"; ""

[ENDOFFILE]                                     # last section : mandatory, empty except EOF character
                                                # no key below this section name shall be processed
                                                # any file without this section will be seen as corrupted


#    ======  End of file description  ======                                               